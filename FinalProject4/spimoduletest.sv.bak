module paramcounter #(parameter N)
								(input logic clk,
								input logic reset,
								output logic [N-1:0]q);
// basic parameterized counter			
		always_ff @(posedge clk, posedge reset)
			if (reset) q<= 0;
			else q<=q+1;
endmodule

module paramspi #(parameter LENGTH) (input logic sck,
										input logic en,
										output logic mosi,
										input logic [LENGTH-1:0]datain);
										//output logic [LENGTH-1:0]dataout);
logic[20:0]cnt=0;
logic[LENGTH-1:0]dataout;
assign mosi = datain[LENGTH - cnt -1];
always_ff @(posedge sck)
	begin
		if (cnt == LENGTH-1)
			cnt = 0;
		else cnt = cnt + 1;
	end
endmodule
		
module multiledsetup(input logic clk,
							output logic sckout,
							output logic mosi);
// reset, enable, and slow clock for led SPIs
logic reset, en, sck;
assign reset = 1'b0;

// bit size of sck clock counter
parameter sckN = 26;
logic [sckN-1:0]counter;						
paramcounter #(sckN) sckmake(clk, reset, counter);
assign sck = counter[12];

// sets clock output pin
assign sckout = sck;
assign en = !counter[sckN-1];

// we have the following LED strands (followed by length)
// largest(14), medium(6), smalls(6), rain1(10), rain2(12), rain3(12)
logic [159:0]datain = 160'h00000000FE00FFFFFFFFFF00FF0000FFFFFFFFFF;

logic mosiout;
paramspi #(160) testled(sck,en,mosiout,datain);
assign mosi = mosiout;
endmodule
